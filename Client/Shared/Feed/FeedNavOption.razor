<Dropdown @ref="moreOptionsRef" Class="feed-context" Display="Display.Inline" Position="Position.Absolute">
    @if (FeedItem != null)
    {
        <DropdownMenu>
            <span Class="px-3 fw-bold">More options</span>
            <DropdownDivider />
            <DropdownItem Clicked="((_) => OnDefaultChangeCallback.InvokeAsync(FeedItem))">
                <Icon Class="@(FeedItem.Default ? "nav-icon default-icon-checked" : "nav-icon")" IconSize="IconSize.Small" Display="Display.Inline" Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Home" />
                <span class="dropdown-label">Default</span>
            </DropdownItem>
            <DropdownItem Clicked="((_) => OnFavoriteChangeCallback.InvokeAsync(FeedItem))">
                <Icon Class="@(FeedItem.Favorite ? "nav-icon favorite-icon-checked" : "nav-icon")" IconSize="IconSize.Small" Display="Display.Inline" Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Star" />
                <span class="dropdown-label">Favorite</span>
            </DropdownItem>
            <DropdownDivider />
            <DropdownItem>
                <Icon Class="nav-icon" IconSize="IconSize.Small" Display="Display.Inline" Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.PenSquare" />
                <span class="dropdown-label">Edit</span>
            </DropdownItem>
            <DropdownItem>
                <Icon Class="nav-icon" IconSize="IconSize.Small" Display="Display.Inline" Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Trash" />
                <span class="dropdown-label">Remove</span>
            </DropdownItem>
        </DropdownMenu>
    }
</Dropdown>

@code {
    private FeedNavigation? _feedItemValue;

    [Parameter]
    public FeedNavigation? FeedItem
    {
        get => _feedItemValue;
        set
        {
            if (_feedItemValue == value) return;
            _feedItemValue = value;
        }
    }

    [Parameter] public EventCallback<FeedNavigation> FeedItemChanged { get; set; }

    [Parameter] public EventCallback<FeedNavigation> OnFavoriteChangeCallback { get; set; }

    [Parameter] public EventCallback<FeedNavigation> OnDefaultChangeCallback { get; set; }

    private Dropdown moreOptionsRef;

    public Dropdown GetRef() => moreOptionsRef;
}

